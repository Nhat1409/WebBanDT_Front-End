{"ast":null,"code":"var _jsxFileName = \"D:\\\\DoAn\\\\WebBanDT_FE\\\\src\\\\components\\\\TableComponent\\\\TableComponent.jsx\",\n  _s = $RefreshSig$();\nimport { Table } from 'antd';\nimport React, { useState } from 'react';\nimport Loading from '../../components/LoadingComponent/Loading';\nimport { Excel } from \"antd-table-saveas-excel\";\nimport { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableComponent = props => {\n  _s();\n  const {\n    selectionType = 'checkbox',\n    data: dataSource = [],\n    isLoading = false,\n    columns = [],\n    handleDelteMany\n  } = props;\n  const [rowSelectedKeys, setRowSelectedKeys] = useState([]);\n  const newColumnExport = useMemo(() => {\n    const arr = columns === null || columns === void 0 ? void 0 : columns.filter(col => col.dataIndex !== 'action');\n    return arr;\n  }, [columns]);\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setRowSelectedKeys(selectedRowKeys);\n    }\n    // getCheckboxProps: (record) => ({\n    //   disabled: record.name === 'Disabled User',\n    //   // Column configuration not to be checked\n    //   name: record.name,\n    // }),\n  };\n  const handleDeleteAll = () => {\n    handleDelteMany(rowSelectedKeys);\n  };\n  const exportExcel = () => {\n    const excel = new Excel();\n    excel.addSheet(\"test\").addColumns(newColumnExport).addDataSource(dataSource, {\n      str2Percent: true\n    }).saveAs(\"Excel.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(Loading, {\n    isLoading: isLoading,\n    children: [!!rowSelectedKeys.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#1d1ddd',\n        color: '#fff',\n        fontWeight: 'bold',\n        padding: '10px',\n        cursor: 'pointer'\n      },\n      onClick: handleDeleteAll,\n      children: \"X\\xF3a t\\u1EA5t c\\u1EA3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportExcel,\n      children: \"Export Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: {\n        type: selectionType,\n        ...rowSelection\n      },\n      columns: columns,\n      dataSource: dataSource,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TableComponent, \"xabnKNRDJayJgV8ue1X8dXuf7yc=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["Table","React","useState","Loading","Excel","useMemo","jsxDEV","_jsxDEV","TableComponent","props","_s","selectionType","data","dataSource","isLoading","columns","handleDelteMany","rowSelectedKeys","setRowSelectedKeys","newColumnExport","arr","filter","col","dataIndex","rowSelection","onChange","selectedRowKeys","selectedRows","handleDeleteAll","exportExcel","excel","addSheet","addColumns","addDataSource","str2Percent","saveAs","children","length","style","background","color","fontWeight","padding","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["D:/DoAn/WebBanDT_FE/src/components/TableComponent/TableComponent.jsx"],"sourcesContent":["import { Table } from 'antd';\r\nimport React, { useState } from 'react'\r\nimport Loading from '../../components/LoadingComponent/Loading'\r\nimport { Excel } from \"antd-table-saveas-excel\";\r\nimport { useMemo } from 'react';\r\n\r\nconst TableComponent = (props) => {\r\n  const { selectionType = 'checkbox', data:dataSource = [], isLoading = false, columns = [], handleDelteMany } = props\r\n  const [rowSelectedKeys, setRowSelectedKeys] = useState([])\r\n  const newColumnExport = useMemo(() => {\r\n    const arr = columns?.filter((col) => col.dataIndex !== 'action')\r\n    return arr\r\n  }, [columns])\r\n  \r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setRowSelectedKeys(selectedRowKeys)\r\n    },\r\n    // getCheckboxProps: (record) => ({\r\n    //   disabled: record.name === 'Disabled User',\r\n    //   // Column configuration not to be checked\r\n    //   name: record.name,\r\n    // }),\r\n  };\r\n  const handleDeleteAll = () => {\r\n    handleDelteMany(rowSelectedKeys)\r\n  }\r\n  const exportExcel = () => {\r\n    const excel = new Excel();\r\n    excel\r\n      .addSheet(\"test\")\r\n      .addColumns(newColumnExport)\r\n      .addDataSource(dataSource, {\r\n        str2Percent: true\r\n      })\r\n      .saveAs(\"Excel.xlsx\");\r\n  };\r\n  \r\n  return (\r\n    <Loading isLoading={isLoading}>\r\n      {!!rowSelectedKeys.length && (\r\n        <div style={{\r\n          background: '#1d1ddd',\r\n          color: '#fff',\r\n          fontWeight: 'bold',\r\n          padding: '10px',\r\n          cursor: 'pointer'\r\n        }}\r\n          onClick={handleDeleteAll}\r\n        >\r\n          Xóa tất cả\r\n        </div>\r\n      )}\r\n      <button onClick={exportExcel}>Export Excel</button>\r\n      <Table\r\n        rowSelection={{\r\n          type: selectionType,\r\n          ...rowSelection,\r\n        }}\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        {...props}\r\n      />\r\n    </Loading>\r\n  )\r\n}\r\n\r\nexport default TableComponent"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,2CAA2C;AAC/D,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,SAASC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAChC,MAAM;IAAEC,aAAa,GAAG,UAAU;IAAEC,IAAI,EAACC,UAAU,GAAG,EAAE;IAAEC,SAAS,GAAG,KAAK;IAAEC,OAAO,GAAG,EAAE;IAAEC;EAAgB,CAAC,GAAGP,KAAK;EACpH,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMiB,eAAe,GAAGd,OAAO,CAAC,MAAM;IACpC,MAAMe,GAAG,GAAGL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,SAAS,KAAK,QAAQ,CAAC;IAChE,OAAOH,GAAG;EACZ,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMS,YAAY,GAAG;IACnBC,QAAQ,EAAEA,CAACC,eAAe,EAAEC,YAAY,KAAK;MAC3CT,kBAAkB,CAACQ,eAAe,CAAC;IACrC;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;EACD,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5BZ,eAAe,CAACC,eAAe,CAAC;EAClC,CAAC;EACD,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,KAAK,GAAG,IAAI1B,KAAK,CAAC,CAAC;IACzB0B,KAAK,CACFC,QAAQ,CAAC,MAAM,CAAC,CAChBC,UAAU,CAACb,eAAe,CAAC,CAC3Bc,aAAa,CAACpB,UAAU,EAAE;MACzBqB,WAAW,EAAE;IACf,CAAC,CAAC,CACDC,MAAM,CAAC,YAAY,CAAC;EACzB,CAAC;EAED,oBACE5B,OAAA,CAACJ,OAAO;IAACW,SAAS,EAAEA,SAAU;IAAAsB,QAAA,GAC3B,CAAC,CAACnB,eAAe,CAACoB,MAAM,iBACvB9B,OAAA;MAAK+B,KAAK,EAAE;QACVC,UAAU,EAAE,SAAS;QACrBC,KAAK,EAAE,MAAM;QACbC,UAAU,EAAE,MAAM;QAClBC,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE;MACV,CAAE;MACAC,OAAO,EAAEhB,eAAgB;MAAAQ,QAAA,EAC1B;IAED;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eACDzC,OAAA;MAAQqC,OAAO,EAAEf,WAAY;MAAAO,QAAA,EAAC;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDzC,OAAA,CAACP,KAAK;MACJwB,YAAY,EAAE;QACZyB,IAAI,EAAEtC,aAAa;QACnB,GAAGa;MACL,CAAE;MACFT,OAAO,EAAEA,OAAQ;MACjBF,UAAU,EAAEA,UAAW;MAAA,GACnBJ;IAAK;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAAAtC,EAAA,CA3DKF,cAAc;AAAA0C,EAAA,GAAd1C,cAAc;AA6DpB,eAAeA,cAAc;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}